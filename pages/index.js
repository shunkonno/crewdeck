import { useEffect, useState } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { ethers } from 'ethers'
import Web3Modal from 'web3modal'

export default function Home() {
  let [currentAccount, setCurrentAccount] = useState('')
  let [ensName, setEnsName] = useState('')

  console.log({ currentAccount, ensName })

  async function getWeb3Modal() {
    let web3Modal = new Web3Modal({
      network: 'mainnet',
      cacheProvider: false,
      providerOptions: {}
    })

    return web3Modal
  }

  async function connectWallet() {
    let web3Modal = await getWeb3Modal()
    let web3Provider = await web3Modal.connect()
    // Wrap web3.js based provider to use with ethers.js.
    let provider = new ethers.providers.Web3Provider(web3Provider)
    // Get accounts.
    let accounts = await provider.listAccounts()
    let address = accounts[0]
    // Set address in state.
    setCurrentAccount(address)
    // Lookup ENS.
    let ensName = await provider.lookupAddress(address)
    // Set ENS in state, ignore if ensName is null.
    ensName ? setEnsName(ensName) : null
  }

  useEffect(() => {
    connectWallet()
  }, [])

  function truncateAddress(address) {
    let firstFiveLetters = address.substring(0, 5)
    let lastFiveLetters = address.substring(address.length - 5)
    let truncatedAddress = firstFiveLetters + '...' + lastFiveLetters

    return truncatedAddress
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container mx-auto">
        {/* Header - START */}
        <header>
          <div className="mb-8">
            <div className="flex justify-between">
              {/* Logo - START */}
              <div>Logo</div>
              {/* Logo - END */}
              {/* Connect Wallet - START */}
              <div>
                {/* If wallet is connected, display users' public address or ENS address. */}
                {currentAccount && (
                  <div>
                    <div>
                      <span className="inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-gray-100 text-gray-800">
                        {ensName ? ensName : truncateAddress(currentAccount)}
                      </span>
                    </div>
                  </div>
                )}
                {/* If wallet isn't connected, display button to connect wallet. */}
                {!currentAccount && (
                  <button
                    className="bg-blue-200 px-4 py-2 text-sm font-bold rounded-sm"
                    onClick={connectWallet}
                  >
                    Connect Wallet
                  </button>
                )}
              </div>
              {/* Connect Wallet - END */}
            </div>
          </div>
        </header>
        {/* Header - END */}
        {/* Grid - START */}
        <div className="grid grid-cols-5 gap-4">
          {/* Filter - START */}
          <div className="container-filter col-span-1">Filters</div>
          {/* Filter - END */}
          {/* Filter Results - START */}
          <main className="container-result col-span-3">
            {/* Result - START */}
            <div className="w-full border border-gray-100 rounded-sm shadow-sm">
              <div className="px-4 py-2">
                <div className="result-title">
                  <Link href="#">
                    <a>
                      <h2 className="text-lg font-medium">
                        Looking for a graphics desginer for our new NFT
                      </h2>
                    </a>
                  </Link>
                </div>
                <div className="result-org">
                  <h3 className="text-sm">buildspace</h3>
                </div>
                <div className="mt-3">
                  <div className="result-tag">
                    <div className="flex justify-start gap-1">
                      <div>
                        <span className="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">
                          Badge
                        </span>
                      </div>
                      <div>
                        <span className="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">
                          Badge
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            {/* Result - END */}
          </main>
          {/* Filter Results - END */}
          {/* Sidebar - START */}
          <div className="container-result col-span-1">Sidebar</div>
          {/* Sidebar - END */}
        </div>
        {/* Grid - END */}
      </div>
    </div>
  )
}
